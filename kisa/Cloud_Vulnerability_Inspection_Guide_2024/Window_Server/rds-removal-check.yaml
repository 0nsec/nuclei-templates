id: rds-removal-check

info:
  name: RDS Removal Check
  author: nukunga[SungHyunJeon]
  severity: medium
  description: |
    Verify that Remote Data Services (RDS) are removed or not configured to mitigate risks of denial-of-service
    attacks or remote execution of administrative commands. Compliance is achieved if any of the following conditions hold:
      - IIS is not in use,
      - The default website does not contain the /msadc virtual directory, or
      - The ADCLaunch registry keys related to RDS do not exist.
  impact: |
    If RDS is improperly configured, attackers may exploit it to perform remote code execution or denial-of-service attacks.
  remediation: |
    Remove the /msadc virtual directory from the default website and delete the following registry keys:
      - HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch\RDSServer.DataFactory
      - HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch\AdvancedDataFactory
      - HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch\VbBusObj.VbBusObjCls
  tags: windows, rds, security, iis

self-contained: true

code:
  - pre-condition: |
      IsWindows();
    engine:
      - powershell
      - powershell.exe
    args:
      - -ExecutionPolicy
      - Bypass
    pattern: "*.ps1"
    source: |
      # Check if IIS (W3SVC) service is present; if not, IIS is not used and RDS is implicitly compliant.
      $iisService = Get-Service -Name W3SVC -ErrorAction SilentlyContinue
      if (-not $iisService) {
          Write-Output "RDS_COMPLIANT"
          exit
      }
      
      # Check for the existence of the /msadc virtual directory in the Default Web Site.
      $msadcExists = $false
      try {
          Import-Module WebAdministration -ErrorAction SilentlyContinue
          $vdirs = Get-WebVirtualDirectory -Site "Default Web Site" -ErrorAction SilentlyContinue
          if ($vdirs) {
              foreach ($vdir in $vdirs) {
                  if ($vdir.Path -eq "/msadc") {
                      $msadcExists = $true
                      break
                  }
              }
          }
      } catch {}
      
      # Check for ADCLaunch registry keys related to RDS.
      $adcLaunchPath = "HKLM:\SYSTEM\CurrentControlSet\Services\W3SVC\Parameters\ADCLaunch"
      $rdServerExists = Test-Path "$adcLaunchPath\RDSServer.DataFactory"
      $advDataExists = Test-Path "$adcLaunchPath\AdvancedDataFactory"
      $vbBusObjExists = Test-Path "$adcLaunchPath\VbBusObj.VbBusObjCls"
      
      # Compliance is achieved if the /msadc virtual directory does not exist OR none of the registry keys exist.
      if ((-not $msadcExists) -or (-not ($rdServerExists -or $advDataExists -or $vbBusObjExists))) {
          Write-Output "RDS_COMPLIANT"
      } else {
          Write-Output "RDS_VULNERABLE"
      }
    matchers:
      - type: word
        words:
          - "RDS_VULNERABLE"
# digest: 4b0a00483046022100d8cf267ffed381de5d895a89988ec6f17ee70dcbdc25797128132cb4b80f9333022100e16163d605f6c45eb1d4b394a7c46ef054401f84f557382c14908df1eed3d72b:3bd7ba8113bb8138bfd3703bfad1917a