id: k8s-allow-privilege-escalation-set

info:
  name: Containers run with allowPrivilegeEscalation enabled
  author: princechaddha
  severity: critical
  description: Checks for containers running with the allowPrivilegeEscalation flag enabled, which can increase security risks by allowing privileges to be escalated
  impact: |
    Enabling allowPrivilegeEscalation in container deployments can result in elevated privileges, potentially allowing attackers to gain further access to host resources. This poses significant security risks.
  remediation: Ensure that the allowPrivilegeEscalation flag is set to false in all container configurations to minimize security risks
  reference:
    - https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  tags: cloud,devops,kubernetes,security,devsecops,containers

flow: |
  code(1);
  for (let container of template.items) {
    set("container", container)
    javascript(1);
  }

self-contained: true
code:
  - engine:
      - sh
      - bash
    source: kubectl get pods --all-namespaces --output=json
    extractors:
      - type: json
        name: items
        internal: true
        json:
          - '.items[] | {pod: .metadata.name, containers: .spec.containers}'

javascript:
  - code: |
        let podData = JSON.parse(template.container); // container is now a JSON object with 'pod' and 'containers'
        podData.containers.forEach(container => {
          if (container.securityContext && container.securityContext.allowPrivilegeEscalation === true) {
            let result = (`Container '${container.name}' in pod '${podData.pod}' running with allowPrivilegeEscalation enabled.`);
            Export(result);
          }
        });


    extractors:
      - type: dsl
        dsl:
          - response
# digest: 490a00463044022022d7414cae87fa28332a6a123d954251d677ec6d3900d9695773585fa2659b1c02200c516a4fac6f46fc00bea745add53ff77b6f95557fceb66c8227ba2d1771ea45:366f2a24c8eb519f6968bd8801c08ebe